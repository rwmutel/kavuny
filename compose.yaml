services:
  coffee-packs:
    image: coffee-packs
    build:
      context: coffee-packs
      dockerfile: CoffeePacks.Dockerfile
    # ports:
    #  - "8080:8080"
    networks:
      - kavuny-net
    depends_on:
      packs-db:
        condition: service_healthy

  packs-db:
    build:
      context: coffee-packs
      dockerfile: Postgres.Dockerfile
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: kavuny
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./coffee-packs/demo_data:/opt/demo_data
    networks:
      - kavuny-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  coffee-shops:
    image: coffee-shops
    build:
      context: coffee-shops
      dockerfile: CoffeeShops.Dockerfile
    ports:
      - "8080:8080"
    networks:
      - kavuny-net
    depends_on:
      shops-db:
        condition: service_healthy
      # packs-db:
        # condition: service_healthy

  shops-db:
    build:
      context: coffee-shops
      dockerfile: Postgres.Dockerfile
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: kavuny
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./coffee-shops/demo_data:/opt/demo_data
    networks:
      - kavuny-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

networks:
  kavuny-net:
    driver: bridge